---
title: "ReadTracking"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(scales)

# Path to the run summary 
filepath <- "/Users/aliciahobdell/Desktop/final_project/zymobiomics_folder/results/runs/runs_summary.csv"

# Read the two header rows
headers <- read.csv(filepath, nrows = 2, header = FALSE, stringsAsFactors = FALSE)

# Combine them into single column names
combined_headers <- paste(headers[1, ], headers[2, ], sep = "_")

# Read the main data (skip the two header rows)
runs_summary <- read.csv(filepath, skip = 2, header = FALSE, stringsAsFactors = FALSE)

# Assign the cleaned column names
colnames(runs_summary) <- make.names(combined_headers, unique = TRUE)

```

```{r}
# Define input columns
total_cols <- c("Metadata_Sample", "Trimmomatic_InputReadPairs", "Bowtie2_TotReads", 
                "Kraken2_TotalReads", "Kraken2_KrakenClassified", "Bracken_BrackenTot")

# Aggregate by sample
aggregated_summary <- runs_summary %>%
  select(all_of(total_cols)) %>%
  group_by(Sample = Metadata_Sample) %>%
  summarise(across(.cols = -Metadata_Sample, mean, na.rm = TRUE), .groups = "drop")

# Define readable stage names
stage_names <- c(
  "Trimmomatic_InputReadPairs" = "RawReads",
  "Bowtie2_TotReads" = "TrimmedReads",
  "Kraken2_TotalReads" = "HostFilteredReads",
  "Kraken2_KrakenClassified" = "ClassifiedReads", 
  "Bracken_BrackenTot" = "QuantifiedReads"
)

# Pivot longer and rename stages
long_summary <- aggregated_summary %>%
  pivot_longer(cols = names(stage_names), names_to = "Original", values_to = "Reads") %>%
  mutate(Stage = factor(stage_names[Original], levels = stage_names)) %>%
  group_by(Sample) %>%
  mutate(Fraction = Reads / Reads[Original == "Trimmomatic_InputReadPairs"]) %>%
  ungroup()

# Compute average across samples
mean_summary <- long_summary %>%
  group_by(Stage) %>%
  summarise(Fraction = mean(Fraction, na.rm = TRUE), .groups = "drop")

# Plot
ggplot(long_summary, aes(x = Stage, y = Fraction, group = Sample, color = Sample)) +
  geom_line(size = 0.5, linetype = "dashed") +
  geom_line(data = mean_summary, aes(x = Stage, y = Fraction, group = 1), 
            color = "black", size = 1, inherit.aes = FALSE) +
  geom_point(data = mean_summary, aes(x = Stage, y = Fraction), 
             color = "black", size = 2, inherit.aes = FALSE) +
  geom_text(data = mean_summary, 
            aes(x = Stage, y = Fraction, label = scales::percent(Fraction, accuracy = 0.01)), 
            color = "black", size = 3.5, vjust = -0.6, hjust = -0.3, inherit.aes = FALSE) +
  theme_minimal() +
  scale_y_continuous(labels = percent_format()) +
  labs(
    title = "Proportion of Reads Retained at Each Pipeline Stage",
    y = "Proportion of Raw Reads"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
# Input BP MEAN 
# Trimmed BP MEAN
# Bowtie BP MEAN 
# Classified BP MEAN 
# Bracken doesn't touch care about read length so the median mean length doesn't matter here 

```

```{r}
bp_cols <- c("Metadata_Sample", "FastQC_1_MedReadLength_1", "FastQC_1_MedReadLength_2", "FastQC_1_AvgReadLength_1", "FastQC_1_AvgReadLength_2", "FastQC_2_MedReadLength_1", "FastQC_2_MedReadLength_2", "FastQC_2_AvgReadLength_1", "FastQC_2_AvgReadLength_2", "Bowtie2_MedReadLen", "Bowtie2_AvgReadLen","Kraken2_MedReadLen", "Kraken2_AvgReadLen" )


# Create a summary keeping the minimum of R1/R2 where needed
aggregated_summary <- runs_summary %>%
  select(all_of(bp_cols)) %>%
  mutate(
    Sample = Metadata_Sample,
    FastQC_1_MedReadLength = pmin(FastQC_1_MedReadLength_1, FastQC_1_MedReadLength_2, na.rm = TRUE),
    FastQC_1_AvgReadLength = pmin(FastQC_1_AvgReadLength_1, FastQC_1_AvgReadLength_2, na.rm = TRUE),
    FastQC_2_MedReadLength = pmin(FastQC_2_MedReadLength_1, FastQC_2_MedReadLength_2, na.rm = TRUE),
    FastQC_2_AvgReadLength = pmin(FastQC_2_AvgReadLength_1, FastQC_2_AvgReadLength_2, na.rm = TRUE)
  ) %>%
  select(Sample, FastQC_1_MedReadLength, FastQC_1_AvgReadLength,
         FastQC_2_MedReadLength, FastQC_2_AvgReadLength,
         Bowtie2_MedReadLen, Bowtie2_AvgReadLen,
         Kraken2_MedReadLen, Kraken2_AvgReadLen)

aggregated_summary
```

```{r}
# Stage mapping
stage_names <- c(
  "FastQC_1" = "RawReads",
  "FastQC_2" = "TrimmedReads",
  "Bowtie2" = "HostFilteredReads",
  "Kraken2" = "ClassifiedReads"
)

# Pivot to long
length_long <- aggregated_summary %>%
  pivot_longer(cols = -Sample, names_to = "Variable", values_to = "Length") %>%
  separate(Variable, into = c("Tool", "MetricType"), sep = "_(?=[^_]+$)", remove = FALSE) %>%
  mutate(
    Stage = recode(Tool, !!!stage_names),
    Metric = case_when(
      str_detect(MetricType, "Med") ~ "Median",
      str_detect(MetricType, "Avg") ~ "Mean"
    ),
    Stage = factor(Stage, levels = c("RawReads", "TrimmedReads", "HostFilteredReads", "ClassifiedReads"))
  ) %>%
  select(Sample, Stage, Metric, Length)
```

```{r}
mean_length_summary <- length_long %>%
  group_by(Stage, Metric) %>%
  summarise(Length = mean(Length, na.rm = TRUE), .groups = "drop")
```

```{r}
ggplot(length_long, aes(
  x = Stage, y = Length,
  group = interaction(Sample, Metric),
  color = Sample,
  linetype = Metric  
)) +
  geom_line(size = 0.5, na.rm = TRUE) +  # ggplot now sets linetype dynamically

  # Average lines (in black)
  geom_line(data = mean_length_summary, aes(x = Stage, y = Length, group = Metric),
            color = "black", size = 1, inherit.aes = FALSE) +
  geom_point(data = mean_length_summary, aes(x = Stage, y = Length),
             color = "black", size = 2, inherit.aes = FALSE) +
  geom_text(data = mean_length_summary,
            aes(x = Stage, y = Length, label = round(Length, 1)),
            color = "black", size = 3.5, vjust = -0.6, hjust = -0.3, inherit.aes = FALSE) +

  theme_minimal() +
  labs(
    title = "Read Length Across Pipeline Stages",
    y = "Read Length (bp)",
    linetype = "Metric"
  ) +
  scale_linetype_manual(values = c(
  "Median" = "dashed",
  "Mean" = "dotted"
  ))+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
